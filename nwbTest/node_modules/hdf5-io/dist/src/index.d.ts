export declare type ArbitraryObject = {
    [x: string]: any;
};
export default class HDF5IO {
    reader: any;
    files: Map<string, {
        name: string;
        read?: any;
        write?: any;
        file?: any;
    }>;
    _path: string;
    _debug: boolean;
    _preprocess: Function;
    _postprocess: Function;
    constructor(reader: any, options?: ArbitraryObject, debug?: boolean);
    _convertPath: (path: string) => string;
    initFS: (path?: string) => Promise<unknown>;
    syncFS: (read?: boolean, path?: string) => Promise<unknown>;
    upload: (ev: Event) => Promise<void>;
    list: (path?: string) => Promise<any[]>;
    download: (name: string, file: any, extension?: string) => void;
    fetch: (url: string, fileName?: string, progressCallback?: (ratio: number, length: number) => void, successCallback?: (fromRemote: boolean) => void, ignoreLocalStorage?: boolean) => Promise<any>;
    _write: (name: string, ab: ArrayBuffer) => Promise<boolean>;
    _FSReady: () => Promise<unknown>;
    _parse: (o: any, aggregator: {
        [x: string]: any;
    } | undefined, key: string, modifier?: ArbitraryObject, keepDatasets?: boolean) => any;
    read: (name?: string, ignoreLocalStorage?: boolean) => any;
    get: (name?: string, mode?: string | undefined, ignoreLocalStorage?: boolean) => {
        name: string;
        read?: any;
        write?: any;
        file?: any;
    };
    save: (path: string) => Promise<unknown>;
    write: (o: ArbitraryObject, name?: string) => void;
    close: (name?: string) => void;
}
